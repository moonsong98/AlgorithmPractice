import sys

input = sys.stdin.readline

n, m = list(map(int, input().split()))
board = [list(map(int, input().split())) for _ in range(n)]

blocks = [
    [(0, 0), (0, 1), (0, 2), (0, 3)],
    [(0, 0), (1, 0), (2, 0), (3, 0)],
    [(0, 0), (0, 1), (1, 0), (1, 1)],
    [(0, 0), (1, 0), (1, 1), (1, 2)],
    [(0, 0), (1, 0), (1, -1), (1, -2)],
    [(0, 0), (0, 1), (1, 1), (2, 1)],
    [(0, 0), (0, -1), (1, -1), (2, -1)],
    [(0, 0), (-1, 0), (-1, 1), (-1, 2)],
    [(0, 0), (-1, 0), (-1, -1), (-1, -2)],
    [(0, 0), (0, 1), (-1, 1), (-2, 1)],
    [(0, 0), (0, -1), (-1, -1), (-2, -1)],
    [(0, 0), (1, 0), (1, 1), (2, 1)],
    [(0, 0), (1, 0), (1, -1), (2, -1)],
    [(0, 0), (0, 1), (1, 1), (1, 2)],
    [(0, 0), (0, -1), (1, -1), (1, -2)],
    [(0, 0), (-1, -1), (-1, 0), (-1, 1)],
    [(0, 0), (1, -1), (1, 0), (1, 1)],
    [(0, 0), (-1, -1), (0, -1), (1, -1)],
    [(0, 0), (-1, 1), (0, 1), (1, 1)],
]

ans = -1
for i in range(n):
    for j in range(m):
        for b in range(19):
            block = blocks[b]
            isValid = True
            s = 0
            for dy, dx in block:
                ny, nx = i + dy, j + dx
                if not (0 <= ny and ny < n and 0 <= nx and nx < m):
                    isValid = False
                    break
                s += board[ny][nx]
            ans = max(ans, s)

print(ans)
